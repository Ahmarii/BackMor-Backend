<!DOCTYPE html>
<html>
<head>
    <title>Profile</title>
    <style>
        body {
            font-family: Arial, sans-serif;
        }
        .search-container {
            position: relative;
            width: 300px;
            margin: 50px auto;
        }
        .search-input {
            width: 100%;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
            box-sizing: border-box;
        }
        .dropdown {
            position: absolute;
            top: 100%;
            left: 0;
            right: 0;
            background: white;
            border: 1px solid #ccc;
            border-top: none;
            max-height: 150px;
            overflow-y: auto;
            display: none;
        }
        .dropdown-item {
            padding: 10px;
            cursor: pointer;
        }
        .dropdown-item:hover {
            background-color: #f0f0f0;
        }
    </style>
</head>
<body>

<div class="search-container">
    <input type="text" id="search" class="search-input" placeholder="Search...">
    <div id="dropdown" class="dropdown"></div>
</div>

<div>
    <img src="https://x7k97ts7-5000.asse.devtunnels.ms/image/{{imgName}}" alt="Image" style="max-width: 360px; max-height: 360px; width: auto; height: auto;">
</div><br><br>


<h2>Upload a File</h2>
<form action="/upload" method="POST" enctype="multipart/form-data">
    <label for="file">Choose a file:</label>
    <input type="file" id="file" name="image" required>
    <br><br>
    <button type="upload">Upload</button>
</form><br><br>


<form id="editableForm">
    <label for="username">Username:</label>
    <input type="text" id="username" value="{{username}}" readonly><br><br>

    <label for="firstname">Firstname:</label>
    <input type="text" id="firstname" value="{{firstname}}" readonly><br><br>
    
    <label for="lastname">Lastname:</label>
    <input type="text" id="lastname" value="{{lastname}}" readonly><br><br>
</form>

<button type="button" onclick="toggleEdit()">Edit</button>
<button type="button" onclick="resetForm()">reset</button><br><br>

<script>
    
const searchInput = document.getElementById('search');
const dropdown = document.getElementById('dropdown');

searchInput.addEventListener('input', (e) => {
    const query = e.target.value.toLowerCase();
    console.log(query)
    dropdown.innerHTML = '';
    if (query) {

        fetch('/userSearch', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ query })
        })
        .then(response => response.json())
        .then(filteredSuggestions => {
                filteredSuggestions.forEach(suggestion => {
                    const item = document.createElement('div');
                    item.classList.add('dropdown-item');
                    item.textContent = suggestion;
                    item.addEventListener('click', () => {
                        console.log(item.textContent)
                        fetch(`/profile/${item.textContent}`)
                        .then(response => {
                            if (response.ok) {
                                return response.url;
                            } else {
                                throw new Error('No response.')
                            }
                        })
                        .then(redirectUrl => {
                            window.location.href = redirectUrl
                        })
                        .catch(error => {
                            console.error('Error when reaching profile.', error)
                        })
    
                    });
                    dropdown.appendChild(item);
                });
                dropdown.style.display = filteredSuggestions.length ? 'block' : 'none';
        })

    } else {
        dropdown.style.display = 'none';
    }
});

document.addEventListener('click', (e) => {
    if (!searchInput.contains(e.target) && !dropdown.contains(e.target)) {
        dropdown.style.display = 'none';
    }
});

function toggleEdit() {
    var formElements = document.getElementById("editableForm").elements;
    var editButton = document.querySelector("#editableForm + button");

    // Toggle the readonly attribute of form elements
    for (var i = 0; i < formElements.length; i++) {
        formElements[i].readOnly = !formElements[i].readOnly;
    }

    // Toggle the button text
    if (editButton.innerText === "Edit") {
        editButton.innerText = "Save change";
    } else {
        editButton.innerText = "Edit";
        saveChanges();
    }
}

function saveChanges() {
    console.log('Save Changes button clicked');
    var formElements = document.getElementById("editableForm").elements;
    var formData = {};
    
    // Create an object with form field values
    for (var i = 0; i < formElements.length; i++) {
        var fieldName = formElements[i].id;
        var fieldValue = formElements[i].value;
        formData[fieldName] = fieldValue;
    }
    
    const data = JSON.stringify(formData);


    // Send the formData object to the server using fetch
    fetch('/profile', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: data
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok ' + response.statusText);
            }
            return response.json();
        })
        .then(data => {
            if (data.redirect) {
                window.location.href = data.redirect;
            }
        })
        .catch(error => {
            console.error('There was a problem with the fetch operation:', error);
        });

}

function resetForm() {
    var formElements = document.getElementById("editableForm").elements;
    // Reset the values of form fields to default
    for (var i = 0; i < formElements.length; i++) {
        formElements[i].value = formElements[i].defaultValue;
    }
}

</script>

</body>
</html>
